@charset "UTF-8";
/* uma animação é criada aqui
na qual é definido com o nome moveInLeft */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  80% {
    transform: translateY(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  /* padding adicionado para o site inteiro */
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* serve para impedir o shake quando
    uma animação é realizada dentro desse elemento */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    /* é usado para cria um bloco de
       linhas e ocupar a linha inteira */
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    /* definições para a animação que
      foi criada */
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* animation-iteration-count: 3; */
    /* animation-delay: 3s; */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out; }

/* pseudo-classes se referem aos estados
especiais que os elementos do css tem*/
.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  /* define a transição das animações
    dos estados desse elemento */
  transition: all 0.2s;
  position: relative;
  font-size: 1.6rem; }

.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }

.btn:active {
  transform: translateY(-0.1rem);
  box-shadow: 0rem 0.5rem 0.1rem 0rem rgba(0, 0, 0, 0.2); }

.btn-white {
  background-color: #fff;
  color: #777; }
  .btn-white::after {
    background-color: #fff; }

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s; }

.btn-animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* aplica os estilos da animação desde 0% */
  animation-fill-mode: backwards; }

.header {
  height: 95vh;
  /* é criado um gradiente transparente antes de adicionar o fundo */
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  /* sempre que a imagem é cortada, 
    a parte mais pra cima dela é mostrada */
  background-position: top;
  position: relative;
  /* serve para cortar a imagem da forma que
    desejar, indicando os n pontos para formar um
    poligono */
  /* clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%); */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0% 100%); }
  .header__logo-box {
    /* a posição de um elemento é relativo ao seu
    elemento pai, que é definido por position: relative; */
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /* Como o translate é em relação ao próprio
      elemento, aqui ele vai se mover em 50% em relação
      ao tamanho do próprio elemento, deixando ele
      no centro */
    transform: translate(-50%, -50%);
    text-align: center; }
